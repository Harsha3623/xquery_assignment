<export><workspace name="assignment 5"><query name="Query" focus="true" listorder="2" taborder="1" active="true" database="13674317226963853000" server="10508786613279711292" database-name="Documents" server-name="App-Services" mode="xquery" optimize="1">xquery version "1.0-ml";


declare function local:writeMap($key,$value){
  element { $key } {
        for $subkey in map:keys($value)
        let $subvalue := map:get($value, $subkey)
        
        return
          if ($subvalue instance of map:map) then
              local:getXMLData($subvalue)  
          else if($subvalue instance of json:array) then (
              
            local:writeArray($subkey,$subvalue) 
              
          ) else
            element { $subkey } { $subvalue } 
      }
};

declare function local:writeArray($key,$value){

        for $subkey in map:keys($value)
        let $subvalue := map:get($value, $subkey)
        return
          if ($subvalue instance of map:map) then
            element {$key} {
             local:getXMLData($subvalue) 
             }
          else
          element { $key } {
             $subvalue   
          }
      
};



declare function local:getXMLData($data) {
  for $key in map:keys($data)
  let $value := map:get($data, $key)
  let $type := xdmp:type($value)
  
  return
    if ($value instance of map:map) then
      local:writeMap($key,$value)
    else if ($value instance of json:array) then  
      element {$key} {
        local:writeArray($key,$value)
      }
    else
      element { $key } { $value }  
};

let $json := '
{
  "labelResponseOptions": "URL_ONLY",
  "requestedShipment": {
    "shipper": {
      "contact": {
        "personName": "SHIPPER NAME",
        "phoneNumber": 1234567890,
        "companyName": "Shipper Company Name"
      },
      "address": {
        "streetLines": [
          "SHIPPER STREET LINE 1"
        ],
        "city": "HARRISON",
        "stateOrProvinceCode": "AR",
        "postalCode": 72601,
        "countryCode": "US"
      }
    },
    "recipients": [
      {
        "contact": {
          "personName": "RECIPIENT NAME",
          "phoneNumber": 1234567890,
          "companyName": "Recipient Company Name"
        },
        "address": {
          "streetLines": [
            "RECIPIENT STREET LINE 1",
            "RECIPIENT STREET LINE 2"
          ],
          "city": "Collierville",
          "stateOrProvinceCode": "TN",
          "postalCode": 38017,
          "countryCode": "US"
        }
      }
    ],
    "shipDatestamp": "2023-05-17",
    "serviceType": "FEDEX_EXPRESS_SAVER",
    "packagingType": "FEDEX_SMALL_BOX",
    "pickupType": "USE_SCHEDULED_PICKUP",
    "blockInsightVisibility": false,
    "shippingChargesPayment": {
      "paymentType": "SENDER"
    },
    "shipmentSpecialServices": {
      "specialServiceTypes": [
        "FEDEX_ONE_RATE","abc"
      ]
    },
    "labelSpecification": {
      "imageType": "PDF",
      "labelStockType": "PAPER_85X11_TOP_HALF_LABEL"
    },
    "requestedPackageLineItems": [
      {
        "declaredValue": {
          "amount": 200,
          "currency": "USD"
        }
      }
    ]
  },
  "accountNumber": {
    "value": "740561073"
  }
}
'

let $parsed := xdmp:from-json-string($json)

let $xmlData := element root {
  local:getXMLData($parsed)
}

return $xmlData
</query><query name="Converting json data to xml data " focus="false" listorder="1" taborder="2" active="true" database="13674317226963853000" server="10508786613279711292" database-name="Documents" server-name="App-Services" mode="xquery" optimize="1">xquery version "1.0-ml";

(:function for printing map data types:)
declare function local:writeMap($key,$value){
  element { $key } {
        for $subkey in map:keys($value)
        let $subvalue := map:get($value, $subkey)
        
        return
          if ($subvalue instance of map:map) then
              element {$subkey} {
                local:getXMLData($subvalue)  (: calling same function for nested maps :)
              }
          else if($subvalue instance of json:array) then (
              
            local:writeArray($subkey,$subvalue)  (:calling array function for writing array values:)
              
          ) else
            element { $subkey } { $subvalue } (:else the key value pairs:)
      }
};

(:function for array:)
declare function local:writeArray($key,$value){

        for $subkey in map:keys($value)
        let $subvalue := map:get($value, $subkey)
        return
          if ($subvalue instance of map:map) then
            element {$key} {
             local:getXMLData($subvalue) (: recursion for map items in arrays :)
             }
          else
          element { $key } {
             $subvalue   (: simple element for non-map items in array :)
          }
      
};

(:function to convert json to xml:)
declare function local:getXMLData($data) {
  for $key in map:keys($data)
  let $value := map:get($data, $key)
  let $type := xdmp:type($value)
  
  return
    if ($value instance of map:map) then
      local:writeMap($key,$value)
    else if ($value instance of json:array) then  (: Correct check for JSON array using json:array:)
      
        local:writeArray($key,$value)
      
    else
      element { $key } { $value }  
};

let $json := '
{
  "labelResponseOptions": "URL_ONLY",
  "requestedShipment": {
    "shipper": {
      "contact": {
        "personName": "SHIPPER NAME",
        "phoneNumber": 1234567890,
        "companyName": "Shipper Company Name"
      },
      "address": {
        "streetLines": [
          "SHIPPER STREET LINE 1"
        ],
        "city": "HARRISON",
        "stateOrProvinceCode": "AR",
        "postalCode": 72601,
        "countryCode": "US"
      }
    },
    "recipients": [
      {
        "contact": {
          "personName": "RECIPIENT NAME",
          "phoneNumber": 1234567890,
          "companyName": "Recipient Company Name"
        },
        "address": {
          "streetLines": [
            "RECIPIENT STREET LINE 1",
            "RECIPIENT STREET LINE 2"
          ],
          "city": "Collierville",
          "stateOrProvinceCode": "TN",
          "postalCode": 38017,
          "countryCode": "US"
        }
      }
    ],
    "shipDatestamp": "2023-05-17",
    "serviceType": "FEDEX_EXPRESS_SAVER",
    "packagingType": "FEDEX_SMALL_BOX",
    "pickupType": "USE_SCHEDULED_PICKUP",
    "blockInsightVisibility": false,
    "shippingChargesPayment": {
      "paymentType": "SENDER"
    },
    "shipmentSpecialServices": {
      "specialServiceTypes": [
        "FEDEX_ONE_RATE"
      ]
    },
    "labelSpecification": {
      "imageType": "PDF",
      "labelStockType": "PAPER_85X11_TOP_HALF_LABEL"
    },
    "requestedPackageLineItems": [
      {
        "declaredValue": {
          "amount": 200,
          "currency": "USD"
        }
      }
    ]
  },
  "accountNumber": {
    "value": "740561073"
  }
}
'

let $parsed := xdmp:from-json-string($json)

let $xmlData := element root {
  local:getXMLData($parsed)
}

return $xmlData
</query></workspace></export>
